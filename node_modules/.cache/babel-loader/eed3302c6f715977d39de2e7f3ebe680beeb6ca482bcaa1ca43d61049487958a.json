{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2f056d0e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"movieList\"\n};\nconst _hoisted_2 = {\n  class: \"cover\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"item-info\"\n};\nconst _hoisted_5 = {\n  class: \"tittle\"\n};\nconst _hoisted_6 = {\n  class: \"score\"\n};\nconst _hoisted_7 = {\n  class: \"star\"\n};\nconst _hoisted_8 = {\n  class: \"director\"\n};\nconst _hoisted_9 = {\n  class: \"actors\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"item-buybtn\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", null, \"购票\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.movieList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"movie-item\"\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n      src: item.poster,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createTextVNode(\"观众评分 \"), _createElementVNode(\"div\", _hoisted_7, _toDisplayString(item.grade), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, \"导演：\" + _toDisplayString(item.director), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createTextVNode(\" 演员： \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.actors, iten => {\n      return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: \"actor\"\n      }, _toDisplayString(iten.name), 513 /* TEXT, NEED_PATCH */)), [[_vShow, iten.role !== '导演']]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _hoisted_10]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","movieList","item","index","_hoisted_2","src","poster","alt","_hoisted_4","_hoisted_5","_toDisplayString","name","_hoisted_6","_hoisted_7","grade","_hoisted_8","director","_hoisted_9","actors","iten","role","_hoisted_10"],"sources":["/Users/nicolasroy/Desktop/卖座网实战/maizuo_movie/src/components/movieList.vue"],"sourcesContent":["<template>\n  <div class=\"movieList\">\n    <template v-for=\"(item, index) in movieList\" :key=\"index\">\n      <div class=\"movie-item\">\n        <div class=\"cover\">\n          <img :src=\"item.poster\" alt=\"\" />\n        </div>\n        <div class=\"item-info\">\n          <div class=\"tittle\">{{ item.name }}</div>\n          <div class=\"score\">观众评分\n            <div class=\"star\"> {{ item.grade }}</div>\n          </div>\n          <div class=\"director\">导演：{{ item.director }}</div>\n\n          <div class=\"actors\">\n            演员：\n            <template v-for=\"iten in item.actors\" :key=\"index\">\n              <div class=\"actor\" v-show=\"iten.role !== '导演'\">\n                {{ iten.name }}\n              </div>\n            </template>\n          </div>\n        </div>\n        <div class=\"item-buybtn\"><button>购票</button></div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { getMovieList } from \"@/servies/modules/movie_list\"\nimport { ref } from \"vue\"\n\n//请求接口数据\nconst movieList = ref([]) // 创建movieList变量存储下面拿到的res数据\ngetMovieList().then(res => {\n  //把请求到的数据存起来\n  movieList.value = res.data.films //这个movielist是对象，所以是存到它里面的value里面\n  console.log(movieList)\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.movieList {\n  margin: 0.3125rem;\n  .movie-item {\n    display: flex;\n    align-items: center;\n    margin: 5px;\n    .cover {\n      img {\n        width: 4rem;\n        height: 5.625rem;\n      }\n    }\n    .item-info {\n      // display: flex;\n      margin: 5px;\n      .score{\n      }\n    }\n    .actors {\n      display: flex;\n      overflow: hidden;\n      .actor {\n        display: flex;\n      }\n    }\n    .item-buybtn {\n      color: orange;\n      position: absolute;\n      right: 5%;\n    }\n  }\n}\n</style>\n\n@/servies/axios_request/index @/servies/new_class_axios\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EAGXA,KAAK,EAAC;AAAO;;;EAGbA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAQ;;EACdA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAM;;EAEdA,KAAK,EAAC;AAAU;;EAEhBA,KAAK,EAAC;AAAQ;iEASrBC,mBAAA,CAAkD;EAA7CD,KAAK,EAAC;AAAa,I,aAACC,mBAAA,CAAmB,gBAAX,IAAE,E;;;uBAtBzCC,mBAAA,CAyBM,OAzBNC,UAyBM,I,kBAxBJD,mBAAA,CAuBWE,SAAA,QAAAC,WAAA,CAvBuBC,MAAA,CAAAC,SAAS,GAAzBC,IAAI,EAAEC,KAAK;yBAC3BP,mBAAA,CAqBM;WAtB2CO,KAAK;MACjDT,KAAK,EAAC;QACTC,mBAAA,CAEM,OAFNS,UAEM,GADJT,mBAAA,CAAiC;MAA3BU,GAAG,EAAEH,IAAI,CAACI,MAAM;MAAEC,GAAG,EAAC;2CAE9BZ,mBAAA,CAeM,OAfNa,UAeM,GAdJb,mBAAA,CAAyC,OAAzCc,UAAyC,EAAAC,gBAAA,CAAlBR,IAAI,CAACS,IAAI,kBAChChB,mBAAA,CAEM,OAFNiB,UAEM,G,iBAFa,OACjB,GAAAjB,mBAAA,CAAyC,OAAzCkB,UAAyC,EAAAH,gBAAA,CAAnBR,IAAI,CAACY,KAAK,iB,GAElCnB,mBAAA,CAAkD,OAAlDoB,UAAkD,EAA5B,KAAG,GAAAL,gBAAA,CAAGR,IAAI,CAACc,QAAQ,kBAEzCrB,mBAAA,CAOM,OAPNsB,UAOM,G,iBAPc,OAElB,I,kBAAArB,mBAAA,CAIWE,SAAA,QAAAC,WAAA,CAJcG,IAAI,CAACgB,MAAM,EAAnBC,IAAI;4CACnBvB,mBAAA,CAEM;aAHoCO,KAAK;QAC1CT,KAAK,EAAC;0BACNyB,IAAI,CAACR,IAAI,kC,SADaQ,IAAI,CAACC,IAAI,W;wCAM1CC,WAAkD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}